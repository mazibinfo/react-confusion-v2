[{"D:\\Old PC\\coursera\\react\\confusion\\src\\index.js":"1","D:\\Old PC\\coursera\\react\\confusion\\src\\App.js":"2","D:\\Old PC\\coursera\\react\\confusion\\src\\reportWebVitals.js":"3","D:\\Old PC\\coursera\\react\\confusion\\src\\components\\MenuComponent.js":"4","D:\\Old PC\\coursera\\react\\confusion\\src\\shared\\dishes.js":"5","D:\\Old PC\\coursera\\react\\confusion\\src\\components\\DishDetailsComponent.js":"6","D:\\Old PC\\coursera\\react\\confusion\\src\\components\\MainComponent.js":"7","D:\\Old PC\\coursera\\react\\confusion\\src\\components\\HeaderComponent.js":"8","D:\\Old PC\\coursera\\react\\confusion\\src\\components\\FooterComponent.js":"9","D:\\Old PC\\coursera\\react\\confusion\\src\\components\\HomeComponent.js":"10","D:\\Old PC\\coursera\\react\\confusion\\src\\components\\ContactComponent.js":"11","D:\\Old PC\\coursera\\react\\confusion\\src\\shared\\promotions.js":"12","D:\\Old PC\\coursera\\react\\confusion\\src\\shared\\commnets.js":"13","D:\\Old PC\\coursera\\react\\confusion\\src\\shared\\leaders.js":"14","D:\\Old PC\\coursera\\react\\confusion\\src\\components\\AboutComponent.js":"15","D:\\Old PC\\coursera\\react\\confusion\\src\\redux\\configureStore.js":"16","D:\\Old PC\\coursera\\react\\confusion\\src\\redux\\dishes.js":"17","D:\\Old PC\\coursera\\react\\confusion\\src\\redux\\promotions.js":"18","D:\\Old PC\\coursera\\react\\confusion\\src\\redux\\leaders.js":"19","D:\\Old PC\\coursera\\react\\confusion\\src\\redux\\comments.js":"20","D:\\Old PC\\coursera\\react\\confusion\\src\\redux\\ActionTypes.js":"21","D:\\Old PC\\coursera\\react\\confusion\\src\\redux\\ActionCreators.js":"22"},{"size":638,"mtime":1607416876347,"results":"23","hashOfConfig":"24"},{"size":528,"mtime":1607942445429,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1606810781810,"results":"26","hashOfConfig":"27"},{"size":2233,"mtime":1609227432075,"results":"28","hashOfConfig":"24"},{"size":1490,"mtime":1607499777097,"results":"29","hashOfConfig":"24"},{"size":6998,"mtime":1609227335365,"results":"30","hashOfConfig":"24"},{"size":2955,"mtime":1609225273628,"results":"31","hashOfConfig":"24"},{"size":5624,"mtime":1608186777122,"results":"32","hashOfConfig":"24"},{"size":2826,"mtime":1607495587690,"results":"33","hashOfConfig":"24"},{"size":1509,"mtime":1609227402354,"results":"34","hashOfConfig":"24"},{"size":9932,"mtime":1608284878663,"results":"35","hashOfConfig":"24"},{"size":445,"mtime":1607499817611,"results":"36","hashOfConfig":"24"},{"size":4279,"mtime":1607499876462,"results":"37","hashOfConfig":"24"},{"size":2382,"mtime":1607499865856,"results":"38","hashOfConfig":"24"},{"size":4293,"mtime":1607584262434,"results":"39","hashOfConfig":"24"},{"size":612,"mtime":1609219227448,"results":"40","hashOfConfig":"24"},{"size":612,"mtime":1609222461391,"results":"41","hashOfConfig":"24"},{"size":195,"mtime":1608203950096,"results":"42","hashOfConfig":"27"},{"size":183,"mtime":1608204022593,"results":"43","hashOfConfig":"24"},{"size":513,"mtime":1608272046715,"results":"44","hashOfConfig":"27"},{"size":178,"mtime":1609215809150,"results":"45","hashOfConfig":"24"},{"size":792,"mtime":1609228474074,"results":"46","hashOfConfig":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tttp4w",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"1q505wh",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"69"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Old PC\\coursera\\react\\confusion\\src\\index.js",[],"D:\\Old PC\\coursera\\react\\confusion\\src\\App.js",[],"D:\\Old PC\\coursera\\react\\confusion\\src\\reportWebVitals.js",[],["98","99"],"D:\\Old PC\\coursera\\react\\confusion\\src\\components\\MenuComponent.js",[],"D:\\Old PC\\coursera\\react\\confusion\\src\\shared\\dishes.js",[],["100","101"],"D:\\Old PC\\coursera\\react\\confusion\\src\\components\\DishDetailsComponent.js",["102","103","104"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, Row, \r\n    CardImg, CardText, CardTitle, Modal, ModalBody, ModalHeader, Button, Label } from 'reactstrap';\r\nimport { LocalForm, Errors, Control } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\n\r\n    // const required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len)\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState ({\r\n            isModalOpen: !this.state.isModalOpen\r\n        })\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\r\n        // alert('Current State is : ' + JSON.stringify(values));\r\n        // console.log('Current State is : ' + JSON.stringify(values))\r\n    }\r\n\r\n    render() {\r\n        return (                                           \r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil fa-lg\"> Submit Comment</span>\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        Submit Comment\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"container\">\r\n                            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                                <Row className='form-group'>\r\n                                    <Label htmlFor=\"rating\">Rating</Label>\r\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\" className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Row>\r\n                                <Row className='form-group'>\r\n                                    <Label htmlFor=\"author\">Your Name</Label>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\" className=\"form-control\"\r\n                                        validators={{maxLength: maxLength(15), minLength: minLength(3)}} />\r\n                                        <Errors \r\n                                            className=\"text-danger\"\r\n                                            model=\".author\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                maxLength: \"Must be 15 character or less\",\r\n                                                minLength: \"Must be at least 3 character\"\r\n                                            }}/>\r\n                                </Row>\r\n                                <Row className='form-group'>\r\n                                    <Label htmlFor=\"comment\">Comment</Label>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" rows='6' className=\"form-control\"/>\r\n                                </Row>\r\n                                <Row className='form-group'>\r\n                                    <Button type=\"submit\" color=\"primary\">Submit</Button>  \r\n                                </Row>                                                                   \r\n                            </LocalForm>\r\n                        </div>\r\n                    </ModalBody>                        \r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderDish({dish}) {\r\n    return(\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <Card>\r\n                <CardImg top src={dish.image}></CardImg>\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction RenderComments({comments, addComment, dishId}) {\r\n    return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <h4>Comments</h4>\r\n            <ul className=\"list-unstyled\">\r\n                {comments.map((comment) => \r\n                    <li key={comment.id}>\r\n                        <p>{comment.comment}</p> \r\n                        <p>-- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n            <CommentForm addComment={addComment} dishId={dishId}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DishDetails = (props) => {\r\n    if (props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"row\">            \r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>            \r\n        )\r\n    }\r\n    else if (props.dish != null) {\r\n        return (            \r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dish} />                       \r\n                    <RenderComments comments={props.comments}\r\n                                    addComment={props.addComment}\r\n                                    dishId={props.dish.id} />                       \r\n                </div>                    \r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DishDetails;","D:\\Old PC\\coursera\\react\\confusion\\src\\components\\MainComponent.js",["105"],"import { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport DishDetails from './DishDetailsComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport { Switch, Redirect, Route, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { addComment, fetchDishes } from '../redux/ActionCreators';\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        leaders: state.leaders,\r\n        promotions: state.promotions\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addComment: (dishId, rating, author, comment) => dispatch(addComment(dishId, rating, author, comment)),\r\n    fetchDishes: () => {dispatch(fetchDishes())}\r\n})\r\n\r\n\r\nclass Main extends Component {\r\n    constructor(props) {        \r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n    }\r\n\r\n    render() {        \r\n        const HomePage = () => {\r\n            return(\r\n                <Home \r\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                    dishesLoading={this.props.dishes.isLoading}\r\n                    dishesErrMess={this.props.dishes.errMess}\r\n                    leader={this.props.leaders.filter((leader) => leader.featured)[0]}\r\n                    promotion={this.props.promotions.filter((promotion) => promotion.featured)[0]}\r\n                />\r\n            );\r\n        }\r\n\r\n        const dishWithId = ({match}) => {\r\n            return(\r\n                <DishDetails \r\n                    dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n                    isLoading={this.props.dishes.isLoading}\r\n                    errMess={this.props.dishes.errMess} \r\n                    comments={this.props.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n                    addComment={this.props.addComment}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Switch>\r\n                    <Route path=\"/home\" component={HomePage} />\r\n                    <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} /> } />\r\n                    <Route path=\"/menu/:dishId\" component={dishWithId} />\r\n                    <Route exact path=\"/contactus\" component={(Contact)} />\r\n                    <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders} /> } />\r\n                    <Redirect to=\"/home\" />\r\n                </Switch>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","D:\\Old PC\\coursera\\react\\confusion\\src\\components\\HeaderComponent.js",[],"D:\\Old PC\\coursera\\react\\confusion\\src\\components\\FooterComponent.js",[],["106","107"],"D:\\Old PC\\coursera\\react\\confusion\\src\\components\\HomeComponent.js",[],"D:\\Old PC\\coursera\\react\\confusion\\src\\components\\ContactComponent.js",["108","109","110","111","112","113","114"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem, Label, Row, Col, Button } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Curent State is : ' + JSON.stringify(values));\r\n        alert('Curent State is: ' + JSON.stringify(values));\r\n        // event.preventDefault();\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/Home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i href=\"#\" className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">                        \r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\" className=\"form-control\"\r\n                                        validators = {{required, minLength: minLength(3), maxLength: maxLength(9)}} />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\" \r\n                                        messages={{\r\n                                            required : 'Required',\r\n                                            minLength: 'Must be greater than 2 character',\r\n                                            maxLength: 'Must be less than 10 character'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" className=\"form-control\"\r\n                                        validators = {{required, minLength: minLength(3), maxLength: maxLength(9)}} />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\" \r\n                                        messages={{\r\n                                            required : 'Required',\r\n                                            minLength: 'Must be greater than 2 character',\r\n                                            maxLength: 'Must be less than 10 character'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" placeholder=\"Tel. Number\" className=\"form-control\"\r\n                                        validators = {{required, minLength: minLength(3), maxLength: maxLength(9), isNumber}} />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\" \r\n                                        messages={{\r\n                                            required : 'Required',\r\n                                            minLength: 'Must be greater than 2 Number',\r\n                                            maxLength: 'Must be less than 10 Number',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email\" className=\"form-control\"\r\n                                        validators = {{required, validEmail}} />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\" \r\n                                        messages={{\r\n                                            required : 'Required',\r\n                                            validEmail: 'Invalid Email address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\" className=\"form-check_input\" /> {' '} <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>                                    \r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" className=\"form-control\" rows=\"12\" />\r\n                                </Col>                                \r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">Send Feedback</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </div>\r\n                </div>\r\n            </div>            \r\n        );\r\n    }    \r\n}\r\n\r\nexport default Contact;","D:\\Old PC\\coursera\\react\\confusion\\src\\shared\\promotions.js",[],"D:\\Old PC\\coursera\\react\\confusion\\src\\shared\\commnets.js",[],["115","116"],"D:\\Old PC\\coursera\\react\\confusion\\src\\shared\\leaders.js",[],"D:\\Old PC\\coursera\\react\\confusion\\src\\components\\AboutComponent.js",[],"D:\\Old PC\\coursera\\react\\confusion\\src\\redux\\configureStore.js",[],"D:\\Old PC\\coursera\\react\\confusion\\src\\redux\\dishes.js",[],"D:\\Old PC\\coursera\\react\\confusion\\src\\redux\\promotions.js",[],"D:\\Old PC\\coursera\\react\\confusion\\src\\redux\\leaders.js",[],"D:\\Old PC\\coursera\\react\\confusion\\src\\redux\\comments.js",[],"D:\\Old PC\\coursera\\react\\confusion\\src\\redux\\ActionTypes.js",[],"D:\\Old PC\\coursera\\react\\confusion\\src\\redux\\ActionCreators.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"117","replacedBy":"121"},{"ruleId":"119","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":49,"column":37,"nodeType":"125","endLine":49,"endColumn":120},{"ruleId":"123","severity":1,"message":"126","line":59,"column":37,"nodeType":"125","endLine":60,"endColumn":108},{"ruleId":"123","severity":1,"message":"127","line":72,"column":37,"nodeType":"125","endLine":72,"endColumn":135},{"ruleId":"128","severity":1,"message":"129","line":29,"column":5,"nodeType":"130","messageId":"131","endLine":31,"endColumn":6},{"ruleId":"117","replacedBy":"132"},{"ruleId":"119","replacedBy":"133"},{"ruleId":"123","severity":1,"message":"126","line":73,"column":37,"nodeType":"125","endLine":74,"endColumn":119},{"ruleId":"123","severity":1,"message":"126","line":90,"column":37,"nodeType":"125","endLine":91,"endColumn":119},{"ruleId":"123","severity":1,"message":"126","line":107,"column":37,"nodeType":"125","endLine":108,"endColumn":129},{"ruleId":"123","severity":1,"message":"126","line":125,"column":37,"nodeType":"125","endLine":126,"endColumn":81},{"ruleId":"123","severity":1,"message":"134","line":142,"column":45,"nodeType":"125","endLine":142,"endColumn":122},{"ruleId":"123","severity":1,"message":"124","line":147,"column":37,"nodeType":"125","endLine":148,"endColumn":66},{"ruleId":"123","severity":1,"message":"127","line":157,"column":37,"nodeType":"125","endLine":157,"endColumn":137},{"ruleId":"117","replacedBy":"135"},{"ruleId":"119","replacedBy":"136"},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],["137"],["138"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["137"],["138"],"Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["137"],["138"],"no-global-assign","no-unsafe-negation"]